# 1. Разбить на лексические единицы (слова).
# 2. Привести в нижний регистр.
# 3. Избавиться от знаков препинания и всего мусора.
# 4. Избавиться от служебных частей речи.
# 5. Составить матрицу соответсвий.


data = ['А на третий 3 день Алиса пропала.',
        'Это было совершенно исключительное происшествие.',
        'Начать с того, что за всю историю интерната никто из него не пропадал и даже не терялся больше чем на десять минут.',
        'На Марсе в городе потеряться совершенно невозможно.',
        'А тем более земному ребенку, одетому в скафандр.',
        'Первый же встречный марсианин приведет его обратно.',
        'А роботы?',
        'А Служба безопасности?',
        'Нет, потеряться на Марсе невозможно.',
        'Но Алиса потерялась.',
        'Ее не было уже около двух часов, когда меня вызвали с конференции и на марсианском вездеходе-прыгуне привезли в интернат.',
        'Вид у меня был, наверно, растерянный, потому что, когда я появился под куполом, все собравшиеся там сочувственно замолчали.'
        ]


pronouns = ['', 'без', 'благодаря', 'близ', 'в', 'в виде', 'в зависимости от', 'в отличие от',
            'в продолжение', 'в роли', 'в связи с', 'в силу', 'в соответствии с',
            'в течение', 'в целях', 'вблизи', 'ввиду', 'вглубь', 'вдоль', 'включая', 'вместо',
            'внутри', 'во время', 'возле', 'вокруг', 'впереди', 'вроде', 'вслед', 'вследствие',
            'для', 'до', 'за', 'за счёт', 'из', 'из-за', 'из-под', 'исключая о', 'исходя из', 'к', 'кроме',
            'между', 'мимо', 'на', 'навстречу', 'над', 'наподобие', 'насчет ', 'начиная с', 'не говоря о',
            'невзирая на ', 'несмотря на', 'о', 'об', 'около', 'от', 'перед', 'по', 'по поводу', 'по причине',
            'по случаю', 'по-за', 'по-над', 'под', 'позади', 'поперек', 'после', 'посредством', 'при', 'про',
            'против', 'путем', 'ради', 'с', 'сквозь', 'согласно', 'спустя', 'среди', 'у', 'через']


particles = ['ведь', 'вовсе', 'вон', 'вот', 'вряд ли', 'далеко не', 'едва ли', 'единственно', 'именно',
             'исключительно', 'ль', 'не', 'неужели', 'ни', 'ну', 'отнюдь', 'почти', 'прямо', 'разве', 'точно',
             'точь-в-точь', 'уж', 'что за', 'это']


conjunctions = ['а', 'именно', 'благо', 'благодаря', 'будто', 'бы', 'в результате того, что',
                'в результате чего', 'в связи с тем, что', 'в силу того, что', 'в силу чего', 'в случае, если',
                'в то время, как', 'в том случае, если', 'ввиду того, что', 'вдобавок', 'вопреки тому, что',
                'вроде того, как', 'вследствие того, что', 'вследствие чего', 'да', 'еще',
                'дабы', 'даже', 'даром', 'для того, чтобы', 'едва', 'ежели', 'если', 'же', 'затем, чтобы',
                'зато', 'зачем', 'и', 'и вдобавок', 'и все же', 'и все-таки', 'и еще', 'значит', 'и поэтому',
                'и следовательно', 'и тогда', 'ибо', 'из-за того, что', 'или', 'именно', 'к тому же', 'кабы',
                'как', 'как если бы', 'как словно', 'когда', 'коли', 'кроме того', 'ли', 'либо', 'лишь',
                'между тем как', 'не', 'столько', 'нежели', 'независимо от того', 'несмотря на то что', 'ни',
                'но', 'однако', 'особенно', 'оттого', 'отчего', 'перед тем', 'по мере того', 'по причине того',
                'подобно тому', 'пока', 'покамест', 'покуда', 'поскольку', 'после того', 'потому', 'прежде чем',
                'при всем том', 'при условии что', 'притом', 'причем', 'ради того чтобы', 'раз', 'раньше чем',
                'с тем чтобы', 'с тех пор как', 'сколько', 'словно', 'так', 'также', 'тем', 'более что',
                'то', '-то', 'то есть', 'тогда как', 'тоже', 'тому', 'того', 'чем', 'только', 'точно', 'хотя',
                'что', 'чтоб', 'чтобы', 'чуть']

# Список служебных частей речи (предлоги, союзы, частицы)


auxiliary_PoS = set(pronouns + conjunctions + particles)

# Преобразование списка строк в список списков строк с удалением точек в конце предложения


# и приведением в нижний регистр.
data_split_words = [sentence.lower().replace('.', '').split(' ') for sentence in data]


# Избавление от знаков препинания.


for sentence in data_split_words:
    for word in sentence:
        for symbol in word:
            if not symbol.isalpha():
                new_word = word.replace(symbol, '')
                ind = sentence.index(word)
                sentence.pop(ind)
                sentence.insert(ind, new_word)
print(data_split_words)

# Избавление от служебных частей речи.
# data_no_auxiliaries = [list(set(sentence).difference(auxiliary_PoS)) for sentence in data_split_words]
# print(data_no_auxiliaries)

# Составление матрицы

word_matrix = {}
for sentence in data_split_words:
    for word in sentence:
        if word not in word_matrix:
            word_matrix[word] = [sentence.count(word) for sentence in data_split_words]
print(word_matrix)

# Избавление от служебных частей речи.
word_matrix_no_auxiliaries = {}
for key, value in word_matrix.items():
    if key not in auxiliary_PoS:
        word_matrix_no_auxiliaries[key] = value
print(word_matrix_no_auxiliaries)








